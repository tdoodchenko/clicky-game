{"ast":null,"code":"import _objectSpread from \"/Users/taylordoodchenko/Desktop/clicky-game/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/taylordoodchenko/Desktop/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taylordoodchenko/Desktop/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/taylordoodchenko/Desktop/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/taylordoodchenko/Desktop/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/taylordoodchenko/Desktop/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/taylordoodchenko/Desktop/clicky-game/src/components/main/main.js\";\nimport React, { Component } from 'react';\nimport FadeIn from '../transitions/fade-in';\nimport CharacterBox from './characterBox';\nimport ScoreDisplay from './scoredisplay';\n\nvar shuffleArray = function shuffleArray(arr) {\n  return arr.map(function (a) {\n    return [Math.random(), a];\n  }).sort(function (a, b) {\n    return a[0] - b[0];\n  }).map(function (a) {\n    return a[1];\n  });\n};\n\nvar initialChars = [{\n  name: 'Allen Iverson',\n  img: 'img/250x180/allen-iverson.png',\n  clicked: false\n}, {\n  name: 'Blake Griffin',\n  img: 'img/250x180/blake-griffin.png',\n  clicked: false\n}, {\n  name: 'Carmelo Anthony',\n  img: 'img/250x180/carmelo-anthony.png',\n  clicked: false\n}, {\n  name: 'Colby Bryant',\n  img: 'img/250x180/colby-bryant.png',\n  clicked: false\n}, {\n  name: 'Demar Derozan',\n  img: 'img/250x180/demar-derozan.png',\n  clicked: false\n}, {\n  name: 'Derrick Rose',\n  img: 'img/250x180/derrick-rose.png',\n  clicked: false\n}, {\n  name: 'Devin Booker',\n  img: 'img/250x180/devin-booker.png',\n  clicked: false\n}, {\n  name: 'Draymond Green',\n  img: 'img/250x180/draymond-green.png',\n  clicked: false\n}, {\n  name: 'James Harden',\n  img: 'img/250x180/james-harden.png',\n  clicked: false\n}, {\n  name: 'Jeremy Lin',\n  img: 'img/250x180/jeremy-lin.png',\n  clicked: false\n}, {\n  name: 'Kevin Durant',\n  img: 'img/250x180/kevin-durant.png',\n  clicked: false\n}, {\n  name: 'Kyrie Irving',\n  img: 'img/250x180/kyrie-irving.png',\n  clicked: false\n}, {\n  name: 'Lebron James',\n  img: 'img/250x180/lebron-james.png',\n  clicked: false\n}, {\n  name: 'Lonzo-Ball',\n  img: 'img/250x180/lonzo-ball.png',\n  clicked: false\n}, {\n  name: 'Russell Westbrook',\n  img: 'img/250x180/russell-westbrook.png',\n  clicked: false\n}];\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.onCharacterClick = function (index) {\n      if (!_this.state.characters[index].clicked) {\n        _this.setState({\n          characters: shuffleArray(_this.state.characters.map(function (character, current) {\n            return current === index ? _objectSpread({}, character, {\n              clicked: true\n            }) : character;\n          })),\n          user: _objectSpread({}, _this.state.user, {\n            score: _this.state.user.score + 1\n          })\n        }); //and shuffle\n\n      } else {\n        _this.setState({\n          characters: shuffleArray(_this.state.characters.map(function (character) {\n            return _objectSpread({}, character, {\n              clicked: false\n            });\n          })),\n          user: _objectSpread({}, _this.state.user, {\n            score: 0\n          })\n        }); //and shuffle\n\n      }\n    };\n\n    _this.state = {\n      user: {\n        score: 0\n      },\n      characters: shuffleArray(initialChars)\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(FadeIn, {\n        in: true,\n        duration: 450,\n        length: '30px',\n        direction: 'bottom',\n        delay: '1s',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Try to click on every NBA Player once. Once you click a player the grid will shuffle.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), \"Try not to click the same NBA Player twice or the game will start all over!\")), React.createElement(FadeIn, {\n        in: true,\n        duration: 500,\n        direction: 'bottom',\n        delay: '1.5s',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(ScoreDisplay, {\n        score: this.state.user.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(CharacterBox, {\n        characters: this.state.characters,\n        onCharacterClick: this.onCharacterClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nexport { Board as default };","map":{"version":3,"sources":["/Users/taylordoodchenko/Desktop/clicky-game/src/components/main/main.js"],"names":["React","Component","FadeIn","CharacterBox","ScoreDisplay","shuffleArray","arr","map","a","Math","random","sort","b","initialChars","name","img","clicked","Board","props","onCharacterClick","index","state","characters","setState","character","current","user","score"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport FadeIn from '../transitions/fade-in';\nimport CharacterBox from './characterBox';\nimport ScoreDisplay from './scoredisplay';\n\nconst shuffleArray = arr => (\n    arr\n      .map(a => [Math.random(), a])\n      .sort((a, b) => a[0] - b[0])\n      .map(a => a[1]) \n);\n\nconst initialChars = [\n    {\n        name: 'Allen Iverson',\n        img: 'img/250x180/allen-iverson.png',\n        clicked: false\n    },\n    {\n        name: 'Blake Griffin',\n        img: 'img/250x180/blake-griffin.png',\n        clicked: false\n    },\n    {\n        name: 'Carmelo Anthony',\n        img: 'img/250x180/carmelo-anthony.png',\n        clicked: false\n    },\n    {\n        name: 'Colby Bryant',\n        img: 'img/250x180/colby-bryant.png',\n        clicked: false\n    },\n    {\n        name: 'Demar Derozan',\n        img: 'img/250x180/demar-derozan.png',\n        clicked: false\n    },\n    {\n        name: 'Derrick Rose',\n        img: 'img/250x180/derrick-rose.png',\n        clicked: false\n    },\n    {\n        name: 'Devin Booker',\n        img: 'img/250x180/devin-booker.png',\n        clicked: false\n    },\n    {\n        name: 'Draymond Green',\n        img: 'img/250x180/draymond-green.png',\n        clicked: false\n    },\n    {\n        name: 'James Harden',\n        img: 'img/250x180/james-harden.png',\n        clicked: false\n    },\n    {\n        name: 'Jeremy Lin',\n        img: 'img/250x180/jeremy-lin.png',\n        clicked: false\n    },\n    {\n        name: 'Kevin Durant',\n        img: 'img/250x180/kevin-durant.png',\n        clicked: false\n    },\n    {\n        name: 'Kyrie Irving',\n        img: 'img/250x180/kyrie-irving.png',\n        clicked: false\n    },\n    {\n        name: 'Lebron James',\n        img: 'img/250x180/lebron-james.png',\n        clicked: false\n    },\n    {\n        name: 'Lonzo-Ball',\n        img: 'img/250x180/lonzo-ball.png',\n        clicked: false\n    },\n    {\n        name: 'Russell Westbrook',\n        img: 'img/250x180/russell-westbrook.png',\n        clicked: false\n    }\n]\n\nexport default class Board extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            user: {\n                score: 0 \n            },\n            characters: shuffleArray( initialChars )\n        };\n    }\n\n    onCharacterClick = ( index ) =>{\n        if( !this.state.characters[index].clicked ){\n            this.setState({\n                characters: shuffleArray( this.state.characters.map( (character, current) =>  {\n                    return ( current === index ) ? { ...character, clicked:true } : character\n                })),\n                user: {\n                    ...this.state.user,\n                    score: this.state.user.score + 1\n                }\n            });\n            //and shuffle\n        } else {\n            this.setState({\n                characters: shuffleArray(this.state.characters.map( character => { return { ...character, clicked : false } })),\n                user: {\n                    ...this.state.user,\n                    score: 0\n                }\n            });\n            //and shuffle\n        }\n        \n    }\n\n    render(){\n        return (\n            <div className=\"Board\">\n                <FadeIn \n                    in={true}\n                    duration={450}\n                    length={'30px'}\n                    direction={'bottom'}\n                    delay={'1s'}>\n                    <h4>Try to click on every NBA Player once. Once you click a player the grid will shuffle.<br/>Try not to click the same NBA Player twice or the game will start all over!</h4>\n                </FadeIn>\n                <FadeIn \n                    in={true}\n                    duration={500}\n                    direction={'bottom'}\n                    delay={'1.5s'}>\n                    <ScoreDisplay\n                        score={this.state.user.score} />\n                </FadeIn>\n                <CharacterBox \n                    characters={this.state.characters} \n                    onCharacterClick={this.onCharacterClick} />\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}